#!/usr/bin/env bash
# Function to print subdomain information
print_subdomain_info() {
    local domain="$1"
    local subdomain="$2"
    local record_type="$3"
    local destination="$4"

    echo "The subdomain $subdomain is a $record_type record and points to $destination"
}

# Function to perform DNS lookup
perform_dns_lookup() {
    local domain="$1"
    local subdomain="$2"

    # Use dig to perform DNS lookup and extract relevant information using awk
    dig +short "$subdomain.$domain" | awk -v subdomain="$subdomain" \
        -v record_type="$3" \
        -v destination="$4" \
        '{print_subdomain_info("'"$domain"'", subdomain, record_type, destination)}'
}

# Main script
main() {
    local domain="$1"
    local subdomain="$2"

    # Default subdomains
    subdomains=("www" "lb-01" "web-01" "web-02")

    if [ -z "$subdomain" ]; then
        # If no specific subdomain provided, loop through default subdomains
        for sub in "${subdomains[@]}"; do
            perform_dns_lookup "$domain" "$sub" "A" "IP-ADDRESS"  # Replace "IP-ADDRESS" with the actual IP address
        done
    else
        # If a specific subdomain is provided, perform DNS lookup for that subdomain only
        perform_dns_lookup "$domain" "$subdomain" "A" "IP-ADDRESS"  # Replace "IP-ADDRESS" with the actual IP address
    fi
}

# Check if required arguments are provided
if [ "$#" -lt 1 ]; then
    echo "Usage: $0 <domain> [subdomain]"
    exit 1
fi

main "$1" "$2"
